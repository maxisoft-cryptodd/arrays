name: CMake on a single platform

on:
  push:
    branches: [ "main", "abi", "dev" ]
  pull_request:
  workflow_dispatch:

env:

  BUILD_TYPE: Release

jobs:
  build:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      # --- VCPKG CACHING AND SETUP (Submodule) ---
      - name: Cache vcpkg packages
        uses: actions/cache@v4
        with:
          # Cache vcpkg's installed packages, buildtrees, and downloads directories
          path: |
            vcpkg/installed
            vcpkg/buildtrees
            vcpkg/downloads
          # Use the runner OS and the hash of vcpkg.json to generate a cache key
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Bootstrap vcpkg
        # Use the Windows bootstrap script
        run: .\vcpkg\bootstrap-vcpkg.bat
      # --- END VCPKG CACHING AND SETUP ---

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Install uv and set the Python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.13"
          enable-cache: true

      - name: Prepare
        shell: pwsh
        run: |
          uv venv --seed
          uv tool install cmake
          uv tool install ninja
          .venv/Scripts/activate
          python ${{github.workspace}}/build_wheel.py

      - name: Configure CMake
        # Add CMAKE_TOOLCHAIN_FILE to enable vcpkg integration
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build

        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Added -V for verbose output to debug "No tests were found!!!"
        run: ctest -C ${{env.BUILD_TYPE}} -V

      # --- ARTIFACT UPLOAD ---
      - name: Upload Build and Test Artifacts
        uses: actions/upload-artifact@v4
        if: always() # Run even if tests fail, so we can debug
        with:
          # Artifact name will be e.g., windows-Release-artifacts
          name: windows-${{env.BUILD_TYPE}}-artifacts
          # Specify paths to the built files and test results
          path: |
            ${{github.workspace}}/build/${{env.BUILD_TYPE}}/
            ${{github.workspace}}/build/Testing/
          # Keep the artifact for 7 days
          retention-days: 7
      # --- END ARTIFACT UPLOAD ---